/*
 * HWManager.c
 *
 *  Created on: 11.02.2019
 *      Author: dinkelsv64505
 */

#include "HW_Init.h"

#include <stdint.h>

uint32_t rtc_pin = 0;

void hw_init_init()
{
	setPinVar[0] = &PIN_OPEN_FLAG;
	for (int i = 1; i < sizeof(setPinFct) / sizeof(uint32_t*); i++)
	{
		setPinVar[i] = &PIN_ERR_FLAG;

	}
	for (int i = 0; i < sizeof(setBusAddrVar) / sizeof(uint8_t*); i++)
	{
		setBusAddrVar[i] = &ADDR_ERR_FLAG;
	}
}

uint8_t hw_init_registerPinIdentfier(uint8_t pinID, uint32_t *value)
{
	setPinVar[pinID] = value;
}

void hw_init_gpio()
{

	// Read HW Info
	HW_ID = FLASH_ReadByte(_MEMORY_HWCONFIG_BEGIN_);
	HW_VERSION = FLASH_ReadByte(_MEMORY_HWCONFIG_BEGIN_ + 1);
	HW_BUS_DEV_NUM = FLASH_ReadByte(_MEMORY_HWCONFIG_BEGIN_ + 2);

	// Read Local Pin Config
	uint32_t currPin = GPIO_Pin_0;
	for (int i = 0; i < NUM_LOCAL_PIN; i++)
	{
		uint8_t pinMode = FLASH_ReadByte(_MEMORY_HWCONFIG_BEGIN_ + 16 + i);
		*setPinFct[pinMode] = currPin;
		currPin = currPin << 1;
	}

	// Read Ext Pin Config
	currPin = NUM_LOCAL_PIN;
	for (int i = 0; i < NUM_EXT_PIN; i++)
	{
		uint8_t pinMode = FLASH_ReadByte(_MEMORY_HWCONFIG_BEGIN_ + 32 + i);
		*setPinFct[pinMode] = currPin;
		currPin++;
	}

	// Read I2C Addr
	for (int i = 0; i < HW_BUS_DEV_NUM; i++)
	{
		uint8_t samID = FLASH_ReadByte(_MEMORY_HWCONFIG_BEGIN_ + 48 + i * 2);
		uint8_t addr = FLASH_ReadByte(_MEMORY_HWCONFIG_BEGIN_ + 48 + 1 + i * 2);

		*setBusAddrVar[samID] = addr;
	}

}

